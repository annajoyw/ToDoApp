@using ToDoApp.Data
@inject IHttpClientFactory ClientFactory
@using System.Text.Json
@using System.Text.Json.Serialization
<EditForm Model="@NewItem" OnSubmit="@ItemAdded">
    <div style="display: flex; align-items: center; width: 400px;">
        <div style="margin-right: 10px">Text:</div>
        <InputText @bind-Value="NewItem.Text" class="form-control" style="margin-right: 10px" id="Item" />
        <input type="submit" class="btn btn-primary" style="margin-right: 10px" value="Add" />
        <input type="reset" class="btn btn-secondary" value="Clear" />
    </div>
</EditForm>

@code {
    [Parameter]
    public ToDoItem CurrentToDoItem { get; set; }
    [Parameter]
    public Action OnItemAdded { get; set; }

    private ToDoItem NewItem = new ToDoItem("");

    public async void ItemAdded()
    {
         var client = ClientFactory.CreateClient();

         var request = new HttpRequestMessage(HttpMethod.Post,
           "https://localhost:7003/ToDo/add-child-item");
            var subItemWrapper = new ToDoSubItem(CurrentToDoItem, NewItem);
        request.Content = JsonContent.Create(subItemWrapper);
      

         var response = await client.SendAsync(request);
        
        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            var deserialized = await JsonSerializer.DeserializeAsync<IEnumerable<ToDoItem>>(responseStream);
           
           // Todos = deserialized.ToList();
            StateHasChanged();
        }

        //var newItem = new ToDoItem(NewItem.Text);

        //if (CurrentToDoItem != null)
        //{
        //    if (CurrentToDoItem.SubItems == null)
        //    {
        //        CurrentToDoItem.SubItems = new List<ToDoItem>();
        //    }
        //    CurrentToDoItem.SubItems.Add(newItem);
        //}
        //else
        //{
        //    //NewItem.Text = "";
        //    _todoService.Add(newItem);
        //}

        if (OnItemAdded != null)
        {
            OnItemAdded();
        }
    }
}

